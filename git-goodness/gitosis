#!/usr/bin/env ruby
#
#  Created on 2008-12-5.
#  Copyright (c) 2008. All rights reserved.

begin
  require 'rubygems'
rescue LoadError
  # no rubygems to load, so we fail silently
end

require "erb"
require 'optparse'

OPTIONS = {
  :path       => '~',
  :repo       => nil,
  :group      => nil,
  :members    => nil
}
MANDATORY_OPTIONS = %w( repo )

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
  
Simplify (read: automate) the creation of git repos on home server
home server uses gitosis-admin

Usage: #{File.basename($0)} [options]

Options are:
BANNER
  opts.separator ""
  opts.on("-r", "--repo-name=repo", "The repository name."){|v| 
    OPTIONS[:repo] = v.gsub('=', '')}
  opts.on("-m", "--members=members", "Members of the repository."){|v| 
    OPTIONS[:members] = v.gsub('=', '')}
  opts.on("-g", "--group-name=group", "The group name. Defaults to repository name"){|v| 
    OPTIONS[:group] = v.gsub('=', '')}
  opts.on("-h", "--help", "Show this help message.") { puts opts; exit }
  opts.parse!(ARGV)

  if MANDATORY_OPTIONS && MANDATORY_OPTIONS.find { |option| OPTIONS[option.to_sym].nil? }
    puts opts; exit
  end
end

@default_members = ENV['GIT_GITOSIS_ADMIN_MEMBERS']
@gitosis_admin_path = ENV['GIT_GITOSIS_ADMIN_PATH']

@group_name = OPTIONS[:group] ? OPTIONS[:group] : OPTIONS[:repo] 
@members = OPTIONS[:members] ? OPTIONS[:members] : @default_members
@project_name = OPTIONS[:repo] 

MESSAGE = [
  "Are you sure you wish to add this stanza to your gitosis-admin configuration? ",
  "type 'yes' or 'no'"  
]

def prompt(num=0)
  puts MESSAGE[num]
  @confirm = $stdin.gets.chomp 

  if @confirm == "yes" || @confirm == "no"
    return
  else
    prompt(1)
  end

end

def commit_gitosis_admin
  Dir.chdir(@gitosis_admin_path){ 
    system("git add .") 
    system("git commit -m 'add #{@project_name}' ")
    system("git push")
  }
end

templatestring = "
[group <%= @group_name %>]
members = <%= @members %>
writable = <%= @project_name %>";
template = ERB.new(templatestring)

puts ""
puts template.result(binding)

prompt

if @confirm == "yes"
  system("echo '#{template.result(binding)}' >> ~/Projects/gitosis-admin/gitosis.conf")
  commit_gitosis_admin
elsif @confirm == "no"
  exit
end