#!/usr/bin/env ruby  


spec_report_path = "doc/spec/report.html"  
feature_report_path = "doc/spec/features.txt"  

if File.exist?("Rakefile")  
  system "rm #{spec_report_path}"
  system "rm #{feature_report_path}"
  
  system "cucumber features --format pretty --format progress --out=#{feature_report_path}" 
    # run the features. send progress to screen. save html results to feature_report_path  
  system "rake spec" 
    # run the spec. send progress to screen. save html results to spec_report_path  

  examples = 0
  failures = 0
  pending = 0

  # find out how many errors were found  
  if File.exist?(spec_report_path)
    html = open(spec_report_path).read  
    examples += html.match(/(\d+) examples/)[0].to_i rescue 0  
    failures += html.match(/(\d+) failures/)[0].to_i rescue 0  
    pending += html.match(/(\d+) pending/)[0].to_i rescue 0  
  
    projectdesc = File.read("#{ENV['GIT_DIR']}/description")
  else
    puts "Spec report does not exist."
    exit 1
  end
  
  # find out how many errors were found  
  if File.exist?(feature_report_path)
    html = open(feature_report_path).read  
    examples += html.match(/(\d+) passed/)[0].to_i rescue 0  
    failures += html.match(/(\d+) failed/)[0].to_i rescue 0  
    pending += html.match(/(\d+) undefined/)[0].to_i rescue 0  
    pending += html.match(/(\d+) skipped/)[0].to_i rescue 0  

    projectdesc = File.read("#{ENV['GIT_DIR']}/description")
  else
    puts "Feature report does not exist."
    exit 1
  end
    
  if failures.zero?
    puts "0 failures! #{examples} run, #{pending} pending"  
  else  
    puts "\aDID NOT COMMIT YOUR FILES!"  
    puts "View spec results at #{File.expand_path(spec_report_path)}"  
    puts "View feature results at #{File.expand_path(feature_report_path)}"  
    puts  
    puts "#{failures} failures! #{examples} run, #{pending} pending"  

    system("twit \"has failing tests for #{projectdesc}\"")

    audiofile = "#{ENV['CLI_GOODNESS']}/git-goodness/Git_Fail.aif"
    system("sndplay '#{audiofile}'")

    exit 1  
  end

end